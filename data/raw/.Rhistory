BiocManager::install('TCGAbiolinks')
library(TCGAbiolinks)
# 查看projects
getGDCprojects()
# 查看projects
getGDCprojects()$project_id
clinical[1:4,1:4]
# 下载临床数据
clinical <- GDCquery_clinic(project = cancer_type, type = "clinical")
# 选择要下载的project
cancer_type <- "TCGA-GBM"
# 下载临床数据
clinical <- GDCquery_clinic(project = cancer_type, type = "clinical")
clinical[1:4,1:4]
view(clinical)
View(clinical)
write.csv(clinical, file="TCGAbiolinks-GBM-clinical.csv")
# 下载RNA-seq的count数据
library(dplyr)
library(DT)
install.packages("DT")
library(DT)
library(SummarizedExperiment)
data_type <- "Gene Expression Quantification"
data_category <- "Transcriptome Profiling"  # 选择数据类别为转录组
workflow_type <- "HTSeq - Counts"
query_TranscriptomeCounts <- GDCquery(project = cancer_type,
data.category = data_category,
data.type = data_type,
workflow.type = workflow_type)
workflow_type <- "STAR - Counts"
query_TranscriptomeCounts <- GDCquery(project = cancer_type,
data.category = data_category,
data.type = data_type,
workflow.type = workflow_type)
query_TranscriptomeCounts
data_category <- "transcriptome profiling"  # 选择数据类别为转录组
workflow_type <- "STAR - Counts"
workflow_type <- "STAR - Counts"
query_TranscriptomeCounts <- GDCquery(project = cancer_type,
data.category = data_category,
data.type = data_type,
workflow.type = workflow_type)
data_category <- "Transcriptome Profiling"  # 选择数据类别为转录组
workflow_type <- "STAR - Counts"
query_TranscriptomeCounts <- GDCquery(project = cancer_type,
data.category = data_category,
data.type = data_type,
workflow.type = workflow_type)
GDCdownload(query_TranscriptomeCounts, method = "api")
gewd()
getwd()
expdat <- GDCprepare(query = query_TranscriptomeCounts)
rlang::last_error()
expdat <- GDCprepare(query = query_TranscriptomeCounts)
BiocManager::install("BioinformaticsFMRP/TCGAbiolinksGUI.data")
BiocManager::install("BioinformaticsFMRP/TCGAbiolinks")
BiocManager::install("BioinformaticsFMRP/TCGAbiolinksGUI.data")
BiocManager::install("BioinformaticsFMRP/TCGAbiolinks")
queryDown_Target2 <- GDCquery(project = "TARGET-AML",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
workflow.type = "STAR - Counts",
barcode = c("TARGET-20-PASPLU-04A-01R"))
library(TCGAbiolinks)
ary(dplyr)
library(DT)
library(SummarizedExperiment)
queryDown_Target2 <- GDCquery(project = "TARGET-AML",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
workflow.type = "STAR - Counts",
barcode = c("TARGET-20-PASPLU-04A-01R"))
GDCdownload(queryDown_Target2)
data2 <- GDCprepare(queryDown_Target2)
data2
count_matrix = assay(data2)
View(count_matrix)
# 查看projects
getGDCprojects()$project_id
# 选择要下载的project
cancer_type <- "TCGA-GBM"
# 下载临床数据
clinical <- GDCquery_clinic(project = cancer_type, type = "clinical")
clinical[1:4,1:4]
View(clinical)
write.csv(clinical, file="TCGAbiolinks-GBM-clinical.csv")
# 设置路径
setwd("D:\\PathGNN_V2\\DeepMOI\\data\\raw")
# 查看projects
getGDCprojects()$project_id
# 选择要下载的project
cancer_type <- "TCGA-GBM"
# 下载临床数据
clinical <- GDCquery_clinic(project = cancer_type, type = "clinical")
clinical[1:4,1:4]
View(clinical)
write.csv(clinical, file="TCGAbiolinks-GBM-clinical.csv")
# 下载RNA-seq的count数据
library(dplyr)
library(DT)
library(SummarizedExperiment)
data_type <- "Gene Expression Quantification"  # 选择数据类型为基因定量表达
data_category <- "Transcriptome Profiling"  # 选择数据类别为转录组
workflow_type <- "STAR - Counts"
query_TranscriptomeCounts <- GDCquery(project = cancer_type,
data.category = data_category,
data.type = data_type,
workflow.type = workflow_type)
GDCdownload(query_TranscriptomeCounts, method = "api")  # 开始下载
expdat <- GDCprepare(query = query_TranscriptomeCounts)
count_matrix <- assay(expdat)
View(count_matrix)
count_matrix
write.csv(count_matrix, file = "TCGAbiolinks_GBM_counts.csv")
# 下载RNA-seq的FPKM数据
workflow_type <- "STAR - FPKM"
Expr_df <- GDCquery(project = cancer_type,
data.category = data_category,
data.type = data_type,
workflow.type = workflow_type)
GDCdownload(Expr_df, method = "api", files.per.chunk = 10)  # 开始下载
GDCdownload(Expr_df, method = "api", files.per.chunk = 10)  # 开始下载
Expr_df <- GDCquery(project = cancer_type,
data.category = data_category,
data.type = data_type,
workflow.type = workflow_type)
GDCdownload(Expr_df, method = "api", files.per.chunk = 10)  # 开始下载
expdat_2 <- GDCprepare(query = Expr_df)
Expr_matrix <- assay(expdat_2)
write.csv(Expr_matrix, file = "TCGAbiolinks_GBM_FPKM.csv")
# 下载甲基化数据
query.met <- GDCquery(project = cancer_type,
legacy = True,
data.category = "DNA methylation")
# 下载甲基化数据
query.met <- GDCquery(project = cancer_type,
data.category = "DNA methylation")
# 下载甲基化数据
query.met <- GDCquery(project = cancer_type,
data.category = "DNA Methylation")
GDCdownload(query.met, method = "api", files.per.chunk = 10)  # 开始下载
# 下载甲基化数据
query.met <- GDCquery(project = cancer_type,
data.type = "xx"
data.category = "DNA Methylation")
# 下载甲基化数据
query.met <- GDCquery(project = cancer_type,
data.type = "xx",
data.category = "DNA Methylation")
# 下载甲基化数据
query.met <- GDCquery(project = cancer_type,
data.type = "Masked Intensities",
data.category = "DNA Methylation")
GDCdownload(query.met, method = "api", files.per.chunk = 10)  # 开始下载
expdat_3 <- GDCprepare(query = query.met)
BiocManager::install('sesame')
expdat_3 <- GDCprepare(query = query.met)
library(sesame)
BiocManager::install('sesameData')
expdat_3 <- GDCprepare(query = query.met)
library(sesame)
library(sesameData)
library(sesame)
install.packages('httpuv')
BiocManager::install('sesameData')
library(sesame)
expdat_3 <- GDCprepare(query = query.met)
expdat_3 <- GDCprepare(query = query.met)
